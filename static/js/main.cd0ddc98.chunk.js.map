{"version":3,"sources":["assets/leaf-logo.png","../items.ts","utils/itemCodes.ts","utils/numeric.ts","utils/items.ts","utils/formatCheat.ts","ItemShow.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","parseVariation","variation","includes","padStart","split","v1","v2","parsedV2","parseInt","realId","item","internalId","decimalToHex","d","padding","hex","Number","toString","length","toUpperCase","isRecipe","input","has","outputTemplate","recipeCheat","itemCheat","variantId","ItemShow","props","variant","small","onClick","iconHeight","image","albumImage","storageImage","alt","Panel","bordered","bodyFill","className","src","height","name","header","colors","join","themes","source","toPairs","materials","map","m","items","untypedItems","recipes","untypedRecipes","allPossibleSelections","flatMap","i","variants","mapToItems","fromPairs","v","uniqueEntryId","r","itemLabel","postfix","undefined","genuine","dataa","role","value","label","EmptyItem","emptyItem","slot","sourceSheet","Category","Other","leafLogo","filename","buy","sell","cellIndex","row","column","InventoryGrid","selectedItems","fillCell","Grid","fluid","Row","rowIndex","columnIndex","Col","xs","key","selected","defaultSelection","Object","freeze","Main","useState","selectedItem","selectItem","selectItemInCell","nextEmptyIndex","range","find","fillIndex","index","Container","Header","Navbar","appearance","Body","Nav","Item","icon","Icon","Sidebar","SelectPicker","data","groupBy","style","width","onSelect","uid","Button","disabled","values","Content","sm","md","lg","k","indexAsString","player","template","thirdField","fourthField","formatCheat","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,uC,k3rqOC2D3C,SAAY,GACV,qBACA,4BACA,gCAHF,CAAY,sBAAO,KAMnB,SAAY,GACV,4BACA,YACA,cACA,oBACA,iCACA,qBACA,oBACA,kBACA,oBACA,sBACA,0BACA,gCACA,gBACA,gBACA,kBACA,oBACA,cACA,gBACA,gBACA,gBACA,cACA,wBACA,6BACA,wBAxBF,CAAY,wBAAQ,KA2BpB,SAAY,GACV,gBACA,cACA,gBACA,gBACA,cACA,cANF,CAAY,8BAAW,KASvB,SAAY,GACV,sBACA,+BACA,iCAHF,CAAY,8BAAW,KAMvB,SAAY,GACV,iCACA,yBAFF,CAAY,wCAAgB,KAK5B,SAAY,GACV,UACA,wBACA,gBACA,gBACA,cACA,oBACA,sBACA,wCACA,YACA,gBACA,0BACA,gBACA,UAbF,CAAY,8BAAW,KAgBvB,SAAY,GACV,gBACA,gBACA,sBACA,wBAJF,CAAY,gCAAY,KAOxB,SAAY,GACV,kBACA,sBACA,4BACA,oBACA,wBALF,CAAY,gCAAY,KAQxB,SAAY,GACV,iBACA,iBACA,iBAHF,CAAY,oBAAM,KAMlB,SAAY,GACV,gBACA,kBAFF,CAAY,wBAAQ,KAKpB,SAAY,GACV,iBACA,iBACA,iBACA,oBACA,YACA,gBACA,kBACA,0BACA,oBACA,YACA,cACA,wBAZF,CAAY,gCAAY,KAexB,SAAY,GACV,qBACA,cACA,kBACA,kBACA,kBALF,CAAY,gDAAoB,KAQhC,SAAY,GACV,QACA,QACA,QAHF,CAAY,oCAAc,KAM1B,SAAY,GACV,kBACA,qBACA,kBACA,eACA,kBACA,eACA,kBACA,eACA,kBACA,eACA,eACA,eACA,eACA,eACA,eACA,eAhBF,CAAY,gBAAI,KAmBhB,SAAY,GACV,gBACA,kBACA,gBAHF,CAAY,gCAAY,KAMxB,SAAY,GACV,gBACA,eACA,gBACA,gBAJF,CAAY,8BAAW,KAOvB,SAAY,GACV,kBACA,cACA,cACA,oBACA,sBACA,kBANF,CAAY,kBAAK,KAkCjB,SAAY,GACV,YACA,uBACA,kBACA,6BACA,2BACA,cACA,yBACA,2BACA,YACA,wBACA,yCACA,oBACA,gBACA,6BACA,+BACA,sBACA,4BACA,kBACA,cACA,gBACA,kBACA,kBACA,kBACA,6BACA,cACA,gBACA,yBACA,gBACA,+BACA,8BACA,gCACA,2BACA,2BACA,yBACA,+BACA,cACA,0BACA,uBACA,gBACA,2BACA,2BACA,+BACA,yBACA,kBACA,2BACA,cACA,gBACA,sBACA,yBACA,wBAlDF,CAAY,0BAAS,KAqDrB,SAAY,GACV,cACA,gBACA,gBACA,cACA,gBACA,sBACA,cACA,gBACA,kBACA,cACA,kBACA,YACA,gBACA,kBAdF,CAAY,kBAAK,KAiBjB,SAAY,GACV,gBACA,sBACA,yBACA,kBACA,cACA,wBACA,gBACA,kBACA,0BACA,sBACA,cAXF,CAAY,4BAAU,KActB,SAAY,GACV,6BACA,+BACA,yBACA,uCACA,gBACA,sBACA,sBACA,sBACA,mBACA,uBACA,+DACA,YACA,yCACA,yBACA,2BACA,+CACA,kCACA,8BACA,6BACA,sBACA,gBACA,uBACA,8DACA,qBACA,2DACA,mEACA,sDACA,uBACA,+BACA,8CACA,iEACA,2BACA,mCACA,oBACA,mCACA,gBACA,oCACA,0BACA,sBACA,+BACA,YACA,mCACA,gCACA,sBACA,cACA,4DACA,2BACA,gBACA,gBACA,cACA,cACA,YACA,cACA,4BACA,+BACA,sBACA,8CACA,8BACA,+BACA,6DACA,8CACA,kDACA,gDACA,uBACA,2BACA,kBACA,yBACA,uBACA,mCACA,qCACA,iDACA,6CACA,mDACA,sCACA,wCACA,oCACA,kCACA,wCACA,sCACA,wCACA,2BACA,8BACA,gBACA,gBACA,oBACA,qBACA,iEACA,oBACA,iCACA,0CACA,qBACA,iDACA,wBACA,kBACA,qDACA,wCAhGF,CAAY,oBAAM,KAmGlB,SAAY,GACV,sBACA,4BACA,oBACA,YACA,wBACA,sBACA,gBACA,oBACA,qBACA,+BACA,kBACA,kBACA,kBACA,oBACA,2BACA,gBACA,cACA,gBACA,kBACA,sBACA,gBACA,kBACA,cACA,gBACA,uBAzBF,CAAY,kBAAK,KA4BjB,SAAY,GACV,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eAhEF,CAAY,0BAAS,KAmErB,SAAY,GACV,iBACA,iBACA,iBACA,iBACA,iBACA,iBANF,CAAY,gCAAY,KASxB,SAAY,GACV,sBACA,kBACA,oBAHF,CAAY,sBAAO,KAMnB,SAAY,GACV,2BACA,uBACA,yBACA,uBACA,yBACA,6BACA,2BACA,yBACA,cATF,CAAY,8BAAW,KAYvB,SAAY,GACV,cACA,kBACA,uBACA,2BACA,6BALF,CAAY,4BAAU,M,uWCxiBf,SAASC,IAA0C,IAA3BC,EAA0B,uDAAN,KACjD,GAAkB,OAAdA,IAAuBA,EAAUC,SAAS,KAC5C,MAAO,GAAGC,SAAS,EAAG,KAExB,GAAIF,EAAUC,SAAS,KAAM,CAAC,IAAD,EACVD,EAAUG,MAAM,KADN,mBACpBC,EADoB,KAChBC,EADgB,KAErBC,EAAWC,SAASF,EAAI,IAC9B,MAAO,UAAc,EAAXC,GAAH,OAAkBF,GAAKF,SAAS,EAAG,KAE5C,MAAO,WAIF,IAAMM,EAAS,SAACC,GAAD,OAA6BA,EAAKC,YCfjD,SAASC,EAAaC,GAG3B,IAH4D,IAAtBC,EAAqB,uDAAH,EACpDC,EAAMC,OAAOH,GAAGI,SAAS,IAEtBF,EAAIG,OAASJ,GAClBC,EAAM,IAAMA,EAGd,OAAOA,EAAII,cCHN,SAASC,EAASC,GACvB,OAAOC,cAAID,EAAO,yBCEpB,IAAME,E,OAGN,SAASC,EAAYd,GACnB,MAAO,CAACE,EAAaH,EAAOC,IAAQ,YAGtC,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","file":"static/js/main.cd0ddc98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leaf-logo.64bdcedb.png\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Catalog;\n(function (Catalog) {\n    Catalog[\"ForSale\"] = \"For sale\";\n    Catalog[\"NotForSale\"] = \"Not for sale\";\n    Catalog[\"NotInCatalog\"] = \"Not in catalog\";\n})(Catalog = exports.Catalog || (exports.Catalog = {}));\nvar Category;\n(function (Category) {\n    Category[\"Accessories\"] = \"Accessories\";\n    Category[\"Art\"] = \"Art\";\n    Category[\"Bags\"] = \"Bags\";\n    Category[\"Bottoms\"] = \"Bottoms\";\n    Category[\"ClothingOther\"] = \"Clothing Other\";\n    Category[\"DressUp\"] = \"Dress-Up\";\n    Category[\"Fencing\"] = \"Fencing\";\n    Category[\"Floors\"] = \"Floors\";\n    Category[\"Fossils\"] = \"Fossils\";\n    Category[\"Headwear\"] = \"Headwear\";\n    Category[\"Housewares\"] = \"Housewares\";\n    Category[\"Miscellaneous\"] = \"Miscellaneous\";\n    Category[\"Music\"] = \"Music\";\n    Category[\"Other\"] = \"Other\";\n    Category[\"Photos\"] = \"Photos\";\n    Category[\"Posters\"] = \"Posters\";\n    Category[\"Rugs\"] = \"Rugs\";\n    Category[\"Shoes\"] = \"Shoes\";\n    Category[\"Socks\"] = \"Socks\";\n    Category[\"Tools\"] = \"Tools\";\n    Category[\"Tops\"] = \"Tops\";\n    Category[\"Umbrellas\"] = \"Umbrellas\";\n    Category[\"WallMounted\"] = \"Wall-mounted\";\n    Category[\"Wallpaper\"] = \"Wallpaper\";\n})(Category = exports.Category || (exports.Category = {}));\nvar CeilingType;\n(function (CeilingType) {\n    CeilingType[\"Cloth\"] = \"Cloth\";\n    CeilingType[\"Gold\"] = \"Gold\";\n    CeilingType[\"Plain\"] = \"Plain\";\n    CeilingType[\"Stone\"] = \"Stone\";\n    CeilingType[\"Tile\"] = \"Tile\";\n    CeilingType[\"Wood\"] = \"Wood\";\n})(CeilingType = exports.CeilingType || (exports.CeilingType = {}));\nvar CurtainType;\n(function (CurtainType) {\n    CurtainType[\"Curtains\"] = \"Curtains\";\n    CurtainType[\"RollerShades\"] = \"Roller Shades\";\n    CurtainType[\"SlattedBlinds\"] = \"Slatted Blinds\";\n})(CurtainType = exports.CurtainType || (exports.CurtainType = {}));\nvar ExchangeCurrency;\n(function (ExchangeCurrency) {\n    ExchangeCurrency[\"HeartCrystals\"] = \"Heart Crystals\";\n    ExchangeCurrency[\"NookMiles\"] = \"Nook Miles\";\n})(ExchangeCurrency = exports.ExchangeCurrency || (exports.ExchangeCurrency = {}));\nvar HhaCategory;\n(function (HhaCategory) {\n    HhaCategory[\"AC\"] = \"AC\";\n    HhaCategory[\"Appliance\"] = \"Appliance\";\n    HhaCategory[\"Audio\"] = \"Audio\";\n    HhaCategory[\"Clock\"] = \"Clock\";\n    HhaCategory[\"Doll\"] = \"Doll\";\n    HhaCategory[\"Dresser\"] = \"Dresser\";\n    HhaCategory[\"Lighting\"] = \"Lighting\";\n    HhaCategory[\"MusicalInstrument\"] = \"MusicalInstrument\";\n    HhaCategory[\"Pet\"] = \"Pet\";\n    HhaCategory[\"Plant\"] = \"Plant\";\n    HhaCategory[\"SmallGoods\"] = \"SmallGoods\";\n    HhaCategory[\"Trash\"] = \"Trash\";\n    HhaCategory[\"Tv\"] = \"TV\";\n})(HhaCategory = exports.HhaCategory || (exports.HhaCategory = {}));\nvar InteractEnum;\n(function (InteractEnum) {\n    InteractEnum[\"Chair\"] = \"Chair\";\n    InteractEnum[\"Trash\"] = \"Trash\";\n    InteractEnum[\"Wardrobe\"] = \"Wardrobe\";\n    InteractEnum[\"Workbench\"] = \"Workbench\";\n})(InteractEnum = exports.InteractEnum || (exports.InteractEnum = {}));\nvar LightingType;\n(function (LightingType) {\n    LightingType[\"Candle\"] = \"Candle\";\n    LightingType[\"Emission\"] = \"Emission\";\n    LightingType[\"Fluorescent\"] = \"Fluorescent\";\n    LightingType[\"Monitor\"] = \"Monitor\";\n    LightingType[\"Spotlight\"] = \"Spotlight\";\n})(LightingType = exports.LightingType || (exports.LightingType = {}));\nvar Museum;\n(function (Museum) {\n    Museum[\"Room1\"] = \"Room 1\";\n    Museum[\"Room2\"] = \"Room 2\";\n    Museum[\"Room3\"] = \"Room 3\";\n})(Museum = exports.Museum || (exports.Museum = {}));\nvar PaneType;\n(function (PaneType) {\n    PaneType[\"Glass\"] = \"Glass\";\n    PaneType[\"Screen\"] = \"Screen\";\n})(PaneType = exports.PaneType || (exports.PaneType = {}));\nvar PrimaryShape;\n(function (PrimaryShape) {\n    PrimaryShape[\"ALine\"] = \"A-line\";\n    PrimaryShape[\"ALong\"] = \"A-long\";\n    PrimaryShape[\"BLong\"] = \"B-long\";\n    PrimaryShape[\"Balloon\"] = \"Balloon\";\n    PrimaryShape[\"Box\"] = \"Box\";\n    PrimaryShape[\"Dress\"] = \"Dress\";\n    PrimaryShape[\"Kimono\"] = \"Kimono\";\n    PrimaryShape[\"Marinesuit\"] = \"Marinesuit\";\n    PrimaryShape[\"Overall\"] = \"Overall\";\n    PrimaryShape[\"Rib\"] = \"Rib\";\n    PrimaryShape[\"Robe\"] = \"Robe\";\n    PrimaryShape[\"Salopette\"] = \"Salopette\";\n})(PrimaryShape = exports.PrimaryShape || (exports.PrimaryShape = {}));\nvar SeasonalAvailability;\n(function (SeasonalAvailability) {\n    SeasonalAvailability[\"AllYear\"] = \"All Year\";\n    SeasonalAvailability[\"Fall\"] = \"Fall\";\n    SeasonalAvailability[\"Spring\"] = \"Spring\";\n    SeasonalAvailability[\"Summer\"] = \"Summer\";\n    SeasonalAvailability[\"Winter\"] = \"Winter\";\n})(SeasonalAvailability = exports.SeasonalAvailability || (exports.SeasonalAvailability = {}));\nvar SecondaryShape;\n(function (SecondaryShape) {\n    SecondaryShape[\"H\"] = \"H\";\n    SecondaryShape[\"L\"] = \"L\";\n    SecondaryShape[\"N\"] = \"N\";\n})(SecondaryShape = exports.SecondaryShape || (exports.SecondaryShape = {}));\nvar Size;\n(function (Size) {\n    Size[\"The05X1\"] = \"0.5x1\";\n    Size[\"The15X15\"] = \"1.5x1.5\";\n    Size[\"The1X05\"] = \"1x0.5\";\n    Size[\"The1X1\"] = \"1x1\";\n    Size[\"The1X15\"] = \"1x1.5\";\n    Size[\"The1X2\"] = \"1x2\";\n    Size[\"The2X05\"] = \"2x0.5\";\n    Size[\"The2X1\"] = \"2x1\";\n    Size[\"The2X15\"] = \"2x1.5\";\n    Size[\"The2X2\"] = \"2x2\";\n    Size[\"The3X1\"] = \"3x1\";\n    Size[\"The3X2\"] = \"3x2\";\n    Size[\"The3X3\"] = \"3x3\";\n    Size[\"The4X3\"] = \"4x3\";\n    Size[\"The4X4\"] = \"4x4\";\n    Size[\"The5X5\"] = \"5x5\";\n})(Size = exports.Size || (exports.Size = {}));\nvar SizeCategory;\n(function (SizeCategory) {\n    SizeCategory[\"Large\"] = \"Large\";\n    SizeCategory[\"Medium\"] = \"Medium\";\n    SizeCategory[\"Small\"] = \"Small\";\n})(SizeCategory = exports.SizeCategory || (exports.SizeCategory = {}));\nvar SpeakerType;\n(function (SpeakerType) {\n    SpeakerType[\"Cheap\"] = \"Cheap\";\n    SpeakerType[\"HiFi\"] = \"Hi-fi\";\n    SpeakerType[\"Phono\"] = \"Phono\";\n    SpeakerType[\"Retro\"] = \"Retro\";\n})(SpeakerType = exports.SpeakerType || (exports.SpeakerType = {}));\nvar Style;\n(function (Style) {\n    Style[\"Active\"] = \"Active\";\n    Style[\"Cool\"] = \"Cool\";\n    Style[\"Cute\"] = \"Cute\";\n    Style[\"Elegant\"] = \"Elegant\";\n    Style[\"Gorgeous\"] = \"Gorgeous\";\n    Style[\"Simple\"] = \"Simple\";\n})(Style = exports.Style || (exports.Style = {}));\nvar BodyTitle;\n(function (BodyTitle) {\n    BodyTitle[\"Art\"] = \"Art\";\n    BodyTitle[\"BagColor\"] = \"Bag color\";\n    BodyTitle[\"Bamboo\"] = \"Bamboo\";\n    BodyTitle[\"BarrelColor\"] = \"Barrel color\";\n    BodyTitle[\"BlockColor\"] = \"Block color\";\n    BodyTitle[\"Body\"] = \"Body\";\n    BodyTitle[\"BodyColor\"] = \"Body color\";\n    BodyTitle[\"BrickColor\"] = \"Brick color\";\n    BodyTitle[\"Can\"] = \"Can\";\n    BodyTitle[\"Cardboard\"] = \"Cardboard\";\n    BodyTitle[\"ChairBackAndSeat\"] = \"Chair back and seat\";\n    BodyTitle[\"Coating\"] = \"Coating\";\n    BodyTitle[\"Color\"] = \"Color\";\n    BodyTitle[\"CoverDesign\"] = \"Cover design\";\n    BodyTitle[\"CoverPattern\"] = \"Cover pattern\";\n    BodyTitle[\"Creation\"] = \"Creation\";\n    BodyTitle[\"Decorations\"] = \"Decorations\";\n    BodyTitle[\"Design\"] = \"Design\";\n    BodyTitle[\"Dish\"] = \"Dish\";\n    BodyTitle[\"Easel\"] = \"Easel\";\n    BodyTitle[\"Fabric\"] = \"Fabric\";\n    BodyTitle[\"Finish\"] = \"Finish\";\n    BodyTitle[\"Flavor\"] = \"Flavor\";\n    BodyTitle[\"FlowerColor\"] = \"Flower color\";\n    BodyTitle[\"Food\"] = \"Food\";\n    BodyTitle[\"Frame\"] = \"Frame\";\n    BodyTitle[\"FruitType\"] = \"Fruit type\";\n    BodyTitle[\"Genre\"] = \"Genre\";\n    BodyTitle[\"HayCondition\"] = \"Hay condition\";\n    BodyTitle[\"Illumination\"] = \"Illumination\";\n    BodyTitle[\"KnitCapColor\"] = \"Knit-cap color\";\n    BodyTitle[\"LightColor\"] = \"Light color\";\n    BodyTitle[\"LumberType\"] = \"Lumber type\";\n    BodyTitle[\"MapCenter\"] = \"Map center\";\n    BodyTitle[\"MushroomType\"] = \"Mushroom type\";\n    BodyTitle[\"Name\"] = \"Name\";\n    BodyTitle[\"Navigation\"] = \"Navigation\";\n    BodyTitle[\"NutColor\"] = \"Nut color\";\n    BodyTitle[\"Paint\"] = \"Paint\";\n    BodyTitle[\"PaintColor\"] = \"Paint color\";\n    BodyTitle[\"PlateColor\"] = \"Plate color\";\n    BodyTitle[\"PumpkinColor\"] = \"Pumpkin color\";\n    BodyTitle[\"RoofColor\"] = \"Roof color\";\n    BodyTitle[\"Season\"] = \"Season\";\n    BodyTitle[\"ShellColor\"] = \"Shell color\";\n    BodyTitle[\"Sign\"] = \"Sign\";\n    BodyTitle[\"Stone\"] = \"Stone\";\n    BodyTitle[\"Tabletop\"] = \"Tabletop\";\n    BodyTitle[\"TireColor\"] = \"Tire color\";\n    BodyTitle[\"Variation\"] = \"Variation\";\n})(BodyTitle = exports.BodyTitle || (exports.BodyTitle = {}));\nvar Color;\n(function (Color) {\n    Color[\"Aqua\"] = \"Aqua\";\n    Color[\"Beige\"] = \"Beige\";\n    Color[\"Black\"] = \"Black\";\n    Color[\"Blue\"] = \"Blue\";\n    Color[\"Brown\"] = \"Brown\";\n    Color[\"Colorful\"] = \"Colorful\";\n    Color[\"Gray\"] = \"Gray\";\n    Color[\"Green\"] = \"Green\";\n    Color[\"Orange\"] = \"Orange\";\n    Color[\"Pink\"] = \"Pink\";\n    Color[\"Purple\"] = \"Purple\";\n    Color[\"Red\"] = \"Red\";\n    Color[\"White\"] = \"White\";\n    Color[\"Yellow\"] = \"Yellow\";\n})(Color = exports.Color || (exports.Color = {}));\nvar LabelTheme;\n(function (LabelTheme) {\n    LabelTheme[\"Comfy\"] = \"comfy\";\n    LabelTheme[\"Everyday\"] = \"everyday\";\n    LabelTheme[\"FairyTale\"] = \"fairy tale\";\n    LabelTheme[\"Formal\"] = \"formal\";\n    LabelTheme[\"Goth\"] = \"goth\";\n    LabelTheme[\"Outdoorsy\"] = \"outdoorsy\";\n    LabelTheme[\"Party\"] = \"party\";\n    LabelTheme[\"Sporty\"] = \"sporty\";\n    LabelTheme[\"Theatrical\"] = \"theatrical\";\n    LabelTheme[\"Vacation\"] = \"vacation\";\n    LabelTheme[\"Work\"] = \"work\";\n})(LabelTheme = exports.LabelTheme || (exports.LabelTheme = {}));\nvar Source;\n(function (Source) {\n    Source[\"AbleSisters\"] = \"Able Sisters\";\n    Source[\"AllVillagers\"] = \"All villagers\";\n    Source[\"AppleTree\"] = \"Apple Tree\";\n    Source[\"AssessingFossils\"] = \"Assessing fossils\";\n    Source[\"Beach\"] = \"Beach\";\n    Source[\"Birthday\"] = \"Birthday\";\n    Source[\"Blathers\"] = \"Blathers\";\n    Source[\"Breeding\"] = \"Breeding\";\n    Source[\"BugOff\"] = \"Bug-Off\";\n    Source[\"BunnyDay\"] = \"Bunny Day\";\n    Source[\"BuryingBellsInAGlowingSpot\"] = \"Burying bells in a glowing spot\";\n    Source[\"CJ\"] = \"C.J.\";\n    Source[\"CatchingWithANet\"] = \"Catching with a net\";\n    Source[\"CedarTree\"] = \"Cedar Tree\";\n    Source[\"CherryTree\"] = \"Cherry Tree\";\n    Source[\"ChoppingABambooTree\"] = \"Chopping a bamboo tree\";\n    Source[\"ChoppingATree\"] = \"Chopping a tree\";\n    Source[\"ClamDigSpot\"] = \"Clam dig spot\";\n    Source[\"CoconutTree\"] = \"Coconut Tree\";\n    Source[\"Crafting\"] = \"Crafting\";\n    Source[\"Cyrus\"] = \"Cyrus\";\n    Source[\"DaisyMae\"] = \"Daisy Mae\";\n    Source[\"DeliveringItemForAVillager\"] = \"Delivering item for a villager\";\n    Source[\"DigSpot\"] = \"Dig Spot\";\n    Source[\"DiggingUpAFullyGrownBush\"] = \"Digging up a fully grown bush\";\n    Source[\"DiggingUpAPartiallyGrownBush\"] = \"Digging up a partially grown bush\";\n    Source[\"DiggingUpAPumpkinPlant\"] = \"Digging up a pumpkin plant\";\n    Source[\"DiveSpot\"] = \"Dive spot\";\n    Source[\"DodoAirlines\"] = \"Dodo Airlines\";\n    Source[\"DonTReturnLostItem\"] = \"Don't return lost item\";\n    Source[\"DonTReturnTreasureQuestItem\"] = \"Don't return treasure quest item\";\n    Source[\"EggBalloon\"] = \"Egg balloon\";\n    Source[\"ExpiredTurnips\"] = \"Expired turnips\";\n    Source[\"Fishing\"] = \"Fishing\";\n    Source[\"FishingTourney\"] = \"Fishing Tourney\";\n    Source[\"Flick\"] = \"Flick\";\n    Source[\"GlowingDigSpot\"] = \"Glowing dig spot\";\n    Source[\"Gullivarrr\"] = \"Gullivarrr\";\n    Source[\"Gulliver\"] = \"Gulliver\";\n    Source[\"HardwoodTree\"] = \"Hardwood Tree\";\n    Source[\"Hha\"] = \"HHA\";\n    Source[\"HighFriendship\"] = \"High Friendship\";\n    Source[\"HittingARock\"] = \"Hitting a rock\";\n    Source[\"Isabelle\"] = \"Isabelle\";\n    Source[\"Jack\"] = \"Jack\";\n    Source[\"JollyReddSTreasureTrawler\"] = \"Jolly Redd's Treasure Trawler\";\n    Source[\"KKConcert\"] = \"K.K. concert\";\n    Source[\"Kicks\"] = \"Kicks\";\n    Source[\"Label\"] = \"Label\";\n    Source[\"Leif\"] = \"Leif\";\n    Source[\"Luna\"] = \"Luna\";\n    Source[\"MOM\"] = \"Mom\";\n    Source[\"Mail\"] = \"Mail\";\n    Source[\"MayDayTour\"] = \"May Day Tour\";\n    Source[\"NewYearSEve\"] = \"New Year's Eve\";\n    Source[\"Nintendo\"] = \"Nintendo\";\n    Source[\"NookMilesRedemption\"] = \"Nook Miles Redemption\";\n    Source[\"NookSCranny\"] = \"Nook's Cranny\";\n    Source[\"NookShopping\"] = \"Nook Shopping\";\n    Source[\"NookShoppingDailySelection\"] = \"Nook Shopping Daily Selection\";\n    Source[\"NookShoppingPosters\"] = \"Nook Shopping Posters\";\n    Source[\"NookShoppingPromotion\"] = \"Nook Shopping Promotion\";\n    Source[\"NookShoppingSeasonal\"] = \"Nook Shopping Seasonal\";\n    Source[\"OnGround\"] = \"On ground\";\n    Source[\"OrangeTree\"] = \"Orange Tree\";\n    Source[\"Pascal\"] = \"Pascal\";\n    Source[\"PeachTree\"] = \"Peach Tree\";\n    Source[\"PearTree\"] = \"Pear Tree\";\n    Source[\"PickingFlowers\"] = \"Picking flowers\";\n    Source[\"PickingPumpkins\"] = \"Picking pumpkins\";\n    Source[\"PlantingABambooShoot\"] = \"Planting a bamboo shoot\";\n    Source[\"PlantingABushStart\"] = \"Planting a bush start\";\n    Source[\"PlantingACedarSapling\"] = \"Planting a cedar sapling\";\n    Source[\"PlantingACherry\"] = \"Planting a cherry\";\n    Source[\"PlantingACoconut\"] = \"Planting a coconut\";\n    Source[\"PlantingAPeach\"] = \"Planting a peach\";\n    Source[\"PlantingAPear\"] = \"Planting a pear\";\n    Source[\"PlantingASapling\"] = \"Planting a sapling\";\n    Source[\"PlantingAnApple\"] = \"Planting an apple\";\n    Source[\"PlantingAnOrange\"] = \"Planting an orange\";\n    Source[\"RecycleBox\"] = \"Recycle box\";\n    Source[\"ReddSRaffle\"] = \"Redd's Raffle\";\n    Source[\"Reese\"] = \"Reese\";\n    Source[\"Rover\"] = \"Rover\";\n    Source[\"Saharah\"] = \"Saharah\";\n    Source[\"SeedBag\"] = \"Seed bag\";\n    Source[\"ShakingAHardwoodOrCedarTree\"] = \"Shaking a hardwood or cedar tree\";\n    Source[\"Snowboy\"] = \"Snowboy\";\n    Source[\"StartingItems\"] = \"Starting items\";\n    Source[\"The5StarTownStatus\"] = \"5-star town status\";\n    Source[\"TomNook\"] = \"Tom Nook\";\n    Source[\"UseAFountainFirework\"] = \"Use a fountain firework\";\n    Source[\"Villagers\"] = \"Villagers\";\n    Source[\"Wilbur\"] = \"Wilbur\";\n    Source[\"WishingOnShootingStars\"] = \"Wishing on shooting stars\";\n    Source[\"WrappingAPresent\"] = \"Wrapping a present\";\n})(Source = exports.Source || (exports.Source = {}));\nvar Theme;\n(function (Theme) {\n    Theme[\"Bathroom\"] = \"bathroom\";\n    Theme[\"ChildSRoom\"] = \"child's room\";\n    Theme[\"Concert\"] = \"concert\";\n    Theme[\"Den\"] = \"den\";\n    Theme[\"Expensive\"] = \"expensive\";\n    Theme[\"Facility\"] = \"facility\";\n    Theme[\"Fancy\"] = \"fancy\";\n    Theme[\"Fitness\"] = \"fitness\";\n    Theme[\"FolkArt\"] = \"folk art\";\n    Theme[\"FreezingCold\"] = \"freezing cold\";\n    Theme[\"Garage\"] = \"garage\";\n    Theme[\"Garden\"] = \"garden\";\n    Theme[\"Horror\"] = \"horror\";\n    Theme[\"Kitchen\"] = \"kitchen\";\n    Theme[\"LivingRoom\"] = \"living room\";\n    Theme[\"Music\"] = \"music\";\n    Theme[\"None\"] = \"none\";\n    Theme[\"Ocean\"] = \"ocean\";\n    Theme[\"Office\"] = \"office\";\n    Theme[\"Outdoors\"] = \"outdoors\";\n    Theme[\"Party\"] = \"party\";\n    Theme[\"School\"] = \"school\";\n    Theme[\"Shop\"] = \"shop\";\n    Theme[\"Space\"] = \"space\";\n    Theme[\"ZenStyle\"] = \"zen-style\";\n})(Theme = exports.Theme || (exports.Theme = {}));\nvar VariantID;\n(function (VariantID) {\n    VariantID[\"The0_0\"] = \"0_0\";\n    VariantID[\"The0_1\"] = \"0_1\";\n    VariantID[\"The0_2\"] = \"0_2\";\n    VariantID[\"The0_3\"] = \"0_3\";\n    VariantID[\"The0_4\"] = \"0_4\";\n    VariantID[\"The0_5\"] = \"0_5\";\n    VariantID[\"The0_6\"] = \"0_6\";\n    VariantID[\"The0_7\"] = \"0_7\";\n    VariantID[\"The1_0\"] = \"1_0\";\n    VariantID[\"The1_1\"] = \"1_1\";\n    VariantID[\"The1_2\"] = \"1_2\";\n    VariantID[\"The1_3\"] = \"1_3\";\n    VariantID[\"The1_4\"] = \"1_4\";\n    VariantID[\"The1_5\"] = \"1_5\";\n    VariantID[\"The1_6\"] = \"1_6\";\n    VariantID[\"The1_7\"] = \"1_7\";\n    VariantID[\"The2_0\"] = \"2_0\";\n    VariantID[\"The2_1\"] = \"2_1\";\n    VariantID[\"The2_2\"] = \"2_2\";\n    VariantID[\"The2_3\"] = \"2_3\";\n    VariantID[\"The2_4\"] = \"2_4\";\n    VariantID[\"The2_5\"] = \"2_5\";\n    VariantID[\"The2_6\"] = \"2_6\";\n    VariantID[\"The2_7\"] = \"2_7\";\n    VariantID[\"The3_0\"] = \"3_0\";\n    VariantID[\"The3_1\"] = \"3_1\";\n    VariantID[\"The3_2\"] = \"3_2\";\n    VariantID[\"The3_3\"] = \"3_3\";\n    VariantID[\"The3_4\"] = \"3_4\";\n    VariantID[\"The3_5\"] = \"3_5\";\n    VariantID[\"The3_6\"] = \"3_6\";\n    VariantID[\"The3_7\"] = \"3_7\";\n    VariantID[\"The4_0\"] = \"4_0\";\n    VariantID[\"The4_1\"] = \"4_1\";\n    VariantID[\"The4_2\"] = \"4_2\";\n    VariantID[\"The4_3\"] = \"4_3\";\n    VariantID[\"The4_4\"] = \"4_4\";\n    VariantID[\"The4_5\"] = \"4_5\";\n    VariantID[\"The4_6\"] = \"4_6\";\n    VariantID[\"The4_7\"] = \"4_7\";\n    VariantID[\"The5_0\"] = \"5_0\";\n    VariantID[\"The5_1\"] = \"5_1\";\n    VariantID[\"The5_2\"] = \"5_2\";\n    VariantID[\"The5_3\"] = \"5_3\";\n    VariantID[\"The5_4\"] = \"5_4\";\n    VariantID[\"The5_5\"] = \"5_5\";\n    VariantID[\"The5_6\"] = \"5_6\";\n    VariantID[\"The5_7\"] = \"5_7\";\n    VariantID[\"The6_0\"] = \"6_0\";\n    VariantID[\"The6_1\"] = \"6_1\";\n    VariantID[\"The6_2\"] = \"6_2\";\n    VariantID[\"The6_3\"] = \"6_3\";\n    VariantID[\"The6_4\"] = \"6_4\";\n    VariantID[\"The6_5\"] = \"6_5\";\n    VariantID[\"The6_6\"] = \"6_6\";\n    VariantID[\"The6_7\"] = \"6_7\";\n    VariantID[\"The7_0\"] = \"7_0\";\n    VariantID[\"The7_1\"] = \"7_1\";\n    VariantID[\"The7_2\"] = \"7_2\";\n    VariantID[\"The7_3\"] = \"7_3\";\n    VariantID[\"The7_4\"] = \"7_4\";\n    VariantID[\"The7_5\"] = \"7_5\";\n    VariantID[\"The7_6\"] = \"7_6\";\n    VariantID[\"The7_7\"] = \"7_7\";\n})(VariantID = exports.VariantID || (exports.VariantID = {}));\nvar VersionAdded;\n(function (VersionAdded) {\n    VersionAdded[\"The100\"] = \"1.0.0\";\n    VersionAdded[\"The110\"] = \"1.1.0\";\n    VersionAdded[\"The120\"] = \"1.2.0\";\n    VersionAdded[\"The130\"] = \"1.3.0\";\n    VersionAdded[\"The140\"] = \"1.4.0\";\n    VersionAdded[\"The150\"] = \"1.5.0\";\n})(VersionAdded = exports.VersionAdded || (exports.VersionAdded = {}));\nvar VfxType;\n(function (VfxType) {\n    VfxType[\"LightOff\"] = \"LightOff\";\n    VfxType[\"Random\"] = \"Random\";\n    VfxType[\"Synchro\"] = \"Synchro\";\n})(VfxType = exports.VfxType || (exports.VfxType = {}));\nvar WindowColor;\n(function (WindowColor) {\n    WindowColor[\"BlackMetal\"] = \"Black Metal\";\n    WindowColor[\"DarkWood\"] = \"Dark Wood\";\n    WindowColor[\"GreyMetal\"] = \"Grey Metal\";\n    WindowColor[\"GreyWood\"] = \"Grey Wood\";\n    WindowColor[\"LightWood\"] = \"Light Wood\";\n    WindowColor[\"NaturalWood\"] = \"Natural Wood\";\n    WindowColor[\"WhiteMetal\"] = \"White Metal\";\n    WindowColor[\"WhiteWood\"] = \"White Wood\";\n    WindowColor[\"Wood\"] = \"Wood\";\n})(WindowColor = exports.WindowColor || (exports.WindowColor = {}));\nvar WindowType;\n(function (WindowType) {\n    WindowType[\"Arch\"] = \"Arch\";\n    WindowType[\"Circle\"] = \"Circle\";\n    WindowType[\"FourPane\"] = \"Four Pane\";\n    WindowType[\"SinglePane\"] = \"Single Pane\";\n    WindowType[\"SlidingPane\"] = \"Sliding Pane\";\n})(WindowType = exports.WindowType || (exports.WindowType = {}));\n//# sourceMappingURL=items.js.map","import { Variant } from '../items/items'\nimport { Recipes } from '../items/recipes'\nexport function parseVariation(variation: string = 'NA') {\n  if (variation === 'NA' || !variation.includes('_')) {\n    return ''.padStart(8, '0')\n  }\n  if (variation.includes('_')) {\n    const [v1, v2] = variation.split('_')\n    const parsedV2 = parseInt(v2, 10)\n    return `${parsedV2 * 2}${v1}`.padStart(8, '0')\n  }\n  return \"XXXXXXXX\"\n}\n\n\nexport const realId = (item: Variant | Recipes) => item.internalId\n","export function decimalToHex(d: number, padding: number = 8) {\n  var hex = Number(d).toString(16);\n\n  while (hex.length < padding) {\n    hex = \"0\" + hex;\n  }\n\n  return hex.toUpperCase();\n}","import { has } from \"lodash\";\nimport { Variant } from \"../items/items\";\nimport { Recipes } from \"../items/recipes\";\n\nexport function isRecipe(input: any): input is Recipes {\n  return has(input, 'craftedItemInternalId')\n}\n\nexport function isVariant(input: any): input is Variant {\n  return has(input, 'uniqueEntryId') && !has(input, 'craftedItemInternalId')\n}","import { parseVariation, realId } from './itemCodes';\nimport { decimalToHex } from './numeric';\nimport ot from '../data/output_template.json'\nimport { isRecipe } from './items';\nimport { Variant } from '../items/items';\nimport { Recipes } from '../items/recipes';\n\nconst outputTemplate = ot\ntype Player = keyof typeof ot\n\nfunction recipeCheat(item: Recipes): string[] {\n  return [decimalToHex(realId(item)), '000016A2']\n}\n\nfunction itemCheat(item: Variant): string[] {\n  \n  return [item.variantId != null ? parseVariation(item.variantId) : '00000000', decimalToHex(realId(item))]\n}\n\nexport function formatCheat(item: Variant | Recipes, indexAsString: string, player: Player = \"Player 1\") {\n  const index = parseInt(indexAsString, 10);\n  const template = outputTemplate[player][index];\n  const [thirdField, fourthField] =  isRecipe(item) ? recipeCheat(item) : itemCheat(item)\n  return `${template[0]} ${template[1]} ${thirdField} ${fourthField}\\n`;\n}\n","import { toPairs } from 'lodash'\nimport React from 'react'\nimport { Panel } from 'rsuite'\nimport { Items, Variant } from './items/items'\nimport { Recipes } from './items/recipes'\nimport { isRecipe, isVariant } from './utils/items'\n\ninterface ItemShowProps {\n  item: Items\n  variant: Variant | Recipes\n  small?: boolean\n  onClick?: () => any\n}\n\nexport function ItemShow(props: ItemShowProps) {\n  const { item, variant, small = false, onClick = () => {} } = props\n  const iconHeight = small ? 90 : 240\n  const image = isRecipe(variant) ? variant.image : variant.image ?? variant.albumImage ?? variant.storageImage ?? ''\n  const alt = isRecipe(variant) ? 'recipe' : variant.variation ?? ''\n  return (\n    <Panel bordered bodyFill onClick={onClick} className=\"acitem\">\n      <img src={image} height={iconHeight} alt={`${item.name} ${alt}`} />\n      <Panel header={isRecipe(variant) ? `${variant.name} recipe` : item.name}>\n        {isVariant(variant) && (\n          <p>\n            {variant.colors.length > 0 && <small>Colors: {variant.colors.join(', ')}</small>}\n            {variant.themes.length > 0 && <small>Themes: {variant.themes.join(', ')}</small>}\n            <small>Source: {variant.source.join(', ')}</small>\n          </p>\n        )}\n        {isRecipe(variant) && (\n          <p>\n            <small>Materials: {toPairs(variant.materials).map(m => `${m[0]}: ${m[1]}`).join(', ')}</small>\n            <small>Source: {variant.source.join(', ')}</small>\n          </p>\n        )}\n      </Panel>\n    </Panel>\n  )\n}\n","import React, { useState } from 'react'\nimport 'rsuite/dist/styles/rsuite-default.css'\nimport './App.css'\nimport { Col, Content, Footer, Grid, Header, Row, SelectPicker, SelectPickerProps, Container, Icon, Nav, Navbar, Sidebar, Button } from 'rsuite'\n\nimport { fromPairs, map } from 'lodash'\nimport leafLogo from './assets/leaf-logo.png'\nimport { formatCheat } from './utils/formatCheat'\nimport { ItemShow } from './ItemShow'\nimport { range, flatMap } from 'lodash'\nimport untypedItems from './items/items.json'\nimport untypedRecipes from './items/recipes.json'\nimport { Items, Category, Variant } from './items/items'\nimport { Recipes } from './items/recipes'\n\ninterface Selection {\n  item: Items\n  selected: Variant | Recipes\n}\n\nconst items: Items[] = untypedItems as Items[]\nconst recipes: Recipes[] = untypedRecipes as unknown as Recipes[]\nconst allPossibleSelections: Array<Pick<Variant | Recipes, 'uniqueEntryId'>> = [...flatMap(items.map((i) => i.variants)), ...recipes]\nconst mapToItems: Record<string, string> = fromPairs([...flatMap(items.map((i) => i.variants.map((v) => [v.uniqueEntryId, i.name]))), ...recipes.map(r => [r.uniqueEntryId, r.name])])\n\nconst getSelection = (variant: Variant | Recipes): Selection => ({\n  selected: variant,\n  item: items.find((i) => i.name === mapToItems[variant.uniqueEntryId]) as Items\n})\n\nfunction itemLabel(item: Items, variant: Variant) {\n  const postfix = variant.colors.length > 0 ? ` - ${variant.colors.join('&')}` : ''\n  if (variant.genuine !== undefined) {\n    return `${variant.genuine ? 'Genuine' : 'Fake'} ${item.name}${postfix}`\n  }\n  if (variant.variation != null) {\n    return `${variant.variation} ${item.name}${postfix}`\n  }\n  return item.name + postfix\n}\n\nconst dataa: SelectPickerProps['data'] = [...flatMap(\n  items.map((m) =>\n    m.variants.map((v) => ({\n      role: m.name,\n      value: v.uniqueEntryId,\n      label: itemLabel(m, v)\n    }))\n  )\n), ...recipes.map(r => ({\n  role: r.name,\n  value: r.uniqueEntryId,\n  label: `${r.name} - Recipe`\n}))]\n\ninterface EmptyItemProps {\n  slot: number\n  onClick?: () => any\n}\n\nfunction EmptyItem(props: EmptyItemProps) {\n  const { onClick = () => {} } = props\n  const emptyItem: Items = {\n    name: `Empty Slot #${props.slot + 1}`,\n    sourceSheet: Category.Other,\n    variants: []\n  }\n  const variant: Variant = {\n    image: leafLogo,\n    filename: '',\n    uniqueEntryId: '',\n    colors: [],\n    themes: [],\n    source: [],\n    internalId: 0,\n    buy: 0,\n    sell: 0\n  }\n  return <ItemShow small={true} onClick={onClick} item={emptyItem} variant={variant} />\n}\n\nconst cellIndex = (row: number, column: number) => row * 10 + column\n\ninterface InventoryGrid {\n  selectedItems: Record<number, Selection>\n  fillCell: (row: number, col: number) => void\n}\n\nfunction InventoryGrid(props: InventoryGrid) {\n  const { selectedItems, fillCell } = props\n  return (\n    <Grid fluid>\n      <Row>\n        {[0, 1, 2, 3].map((rowIndex) => (\n          <>\n            {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((columnIndex) => (\n              <Col xs={6} key={`column-${rowIndex}-${columnIndex}`}>\n                {selectedItems[cellIndex(rowIndex, columnIndex)] === undefined ? (\n                  <EmptyItem onClick={() => fillCell(rowIndex, columnIndex)} slot={cellIndex(rowIndex, columnIndex)} />\n                ) : (\n                  <ItemShow onClick={() => fillCell(rowIndex, columnIndex)} small={true} item={selectedItems[cellIndex(rowIndex, columnIndex)].item} variant={selectedItems[cellIndex(rowIndex, columnIndex)].selected}/>\n                )}\n              </Col>\n            ))}\n          </>\n        ))}\n      </Row>\n    </Grid>\n  )\n}\n\nconst defaultSelection: Selection = Object.freeze({\n  item: items[0],\n  selected: items[0].variants[0]\n})\n\nfunction Main() {\n  const [selectedItem, selectItem] = useState<Selection>(defaultSelection)\n  const [selectedItems, selectItemInCell] = useState<Record<number, Selection>>({})\n\n  const nextEmptyIndex = range(40).find((i) => selectedItems[i] === undefined) ?? 0\n  const selectAcItem = (uid: string) => {\n    selectItem(getSelection(allPossibleSelections.find((v) => v.uniqueEntryId === uid) as Variant) ?? defaultSelection)\n  }\n  const fillIndex = (index: number) => selectItemInCell({ ...selectedItems, [index]: selectedItem })\n  const fillCell = (row: number, column: number) => fillIndex(cellIndex(row, column))\n  const fillEmpty = () => fillIndex(nextEmptyIndex)\n  return (\n    <Container>\n      <Header>\n        <Navbar appearance=\"inverse\">\n          <Navbar.Header>\n            <img src={leafLogo} className=\"logo\" alt=\"Animal Crossing New Horizons Inventory Generator Logo\" />\n          </Navbar.Header>\n          <Navbar.Body>\n            <Nav>\n              <Nav.Item icon={<Icon icon=\"home\" />}>AC:NH Inventory Generator V1.5.0</Nav.Item>\n            </Nav>\n          </Navbar.Body>\n        </Navbar>\n      </Header>\n      <Container>\n        <Sidebar>\n          <SelectPicker data={dataa} groupBy=\"role\" style={{ width: '100%' }} onSelect={selectAcItem} />\n          <ItemShow item={selectedItem.item} variant={selectedItem.selected}/>\n          <Button disabled={Object.values(selectedItems).length >= 40} onClick={fillEmpty}>\n            Fill Next Empty\n          </Button>\n        </Sidebar>\n        <Content>\n          <Grid fluid>\n            <Row className=\"show-grid\">\n              <Col xs={24} sm={12} md={16} lg={18}>\n                <InventoryGrid selectedItems={selectedItems} fillCell={fillCell} />\n              </Col>\n              <Col xs={24} sm={12} md={8} lg={6}>\n                <pre>\n                  {`[CHEAT CODE]\\n`}\n                  {map(selectedItems, (k, v) => formatCheat(k.selected, v))}\n                </pre>\n              </Col>\n            </Row>\n          </Grid>\n        </Content>\n      </Container>\n\n      <Footer>No rights reserved. Do whatever the f*** do you want. Ale Ornelas 2020</Footer>\n    </Container>\n  )\n}\n\nexport default Main\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}